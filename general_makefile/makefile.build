PHONY := __build
__build:

obj-y :=
subdir-y :=
EXTRA_CFLAGS :=

include makefile

# obj-y := main.o a.o sub/
# $(filter %/, $(obj-y)): sub/
# __subdir-y: sub
# subdir-y: sub
__subdir-y  := $(patsubst %/,%,$(filter %/, $(obj-y)))
subdir-y    += $(__subdir-y)

# sub/built-in.o
subdir_objs := $(foreach f,$(subdir-y),$(f)/built-in.o)

# main.o a.o
cur_objs := $(filter-out %/, $(obj-y))
dep_files := $(foreach f,$(cur_objs),.$(f).d)
dep_files := $(wildcard $(dep_files))

ifneq ($(dep_files),)
include $(dep_files)
endif


PHONY += $(subdir-y)

__build: $(subdir-y) built-in.o

$(subdir-y):
	make -C $@ -f $(TOPDIR)/makefile.build

built-in.o: $(cur_objs) $(subdir_objs)
	$(LD) -r -o $@ $^

dep_file = .$@.d

%.o: %.c
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(CFLAGS_$@) -Wp,-MD,$(dep_file) -c -o $@ $<

.PHONY: $(PHONY)

